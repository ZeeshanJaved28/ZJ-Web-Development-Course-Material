Exercise 16 - Solution

// Generate a dummy data in this format in a collection called Employees in a db called Company.

// {
//     name: "Shani",  --> Random 3 names
//     salary:45000000, --> Math.random
//     language: "Python", --> Random 3 languages
//     city: "Khi", --> Random 3 cities
//     isManager: true --> 50 % probablity random generate boolean
// }

// Generate 10 such records when a buttton called generate data is clicked!

// Create an Express App with mongoose to achieve it.

// Every time the button is clicked , you should clear the collection.

Solution:

npm init -y
npm i express@4
express js boiler template
npm i ejs
How to use ejs in express js? 
URL For Using EJS with Express:  
https://github.com/mde/ejs/wiki/Using-EJS-with-Express

app.set("view engine", "ejs");

Make Folder Views
Create Index.EJS File in this folder
Add BootStrap Starter template in this file.

res.render("index", { foo: "FOO" });

npm i mongoose
nodemon script.js

Bootstrap Navbar
https://getbootstrap.com/docs/5.0/components/carousel/
Container
Bootstrap Button

Bootstrap Carousel:
https://getbootstrap.com/docs/4.0/components/carousel/

script in js:

document
        .querySelector(".container>button")
        .addEventListener("click", async () => {
          let a = await fetch('/generate')
          let r = await a.json()
          console.log(r);
          
        });

connect mongoose
https://mongoosejs.com/docs/

create folder models
and make file Employee.js

create mongoose schema:

const kittySchema = new mongoose.Schema({
  name: String
});

const Kitten = mongoose.model('Kitten', kittySchema);

===================================================================
const mongoose = require("mongoose");

const employeeSchema = new mongoose.Schema({
  name: String,
  salary: Number,
  language: String,
  city: String,
  isManager: Boolean,
});

const employee = mongoose.model("employee", employeeSchema);
module.exports = employee;

======================================================================

const express = require("express");
const app = express();
const mongoose = require("mongoose");
const employee = require("./models/employee");

mongoose.connect("mongodb://127.0.0.1:27017/company");
const port = 3000;

app.set("view engine", "ejs");

=======================================================================

const getRandom = (arr) => {
  let rand = Math.floor(Math.random()) * (arr.length - 1);
  return arr[rand];
};

======================================================================
app.get("/generate", async (req, res) => {
  // Clear the collection employee
  await employee.deleteMany({});
  // Generate random data
  let randNames = ["Shani", "Ajaz", "Shahbaz", "Asad", "Zubair"];
  let randLanguages = ["Python", "JavaScript", "HTML", "CSS", "Java"];
  let randCities = ["Khi", "Lhr", "Isl", "Fsd", "Rwp"];
  for (let index = 0; index < 10; index++) {
    let e = await employee.create({
      name: getRandom(randNames),
      salary: Math.floor(Math.random() * 50000),
      language: getRandom(randLanguages),
      city: getRandom(randCities),
      isManager: Math.random() > 0.5 ? true : false,
    });
    console.log(e);
    // await e.save();
  }
  res.render("index99", { foo: "FOO" });
});

===========================================================================